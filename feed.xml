<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://hdev1004.github.io/</id><title>Jinwon</title><subtitle>Present</subtitle> <updated>2022-12-16T00:45:24+08:00</updated> <author> <name>your_full_name</name> <uri>https://hdev1004.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://hdev1004.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://hdev1004.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator> <rights> © 2022 your_full_name </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>시스템 보안실무 기말고사</title><link href="https://hdev1004.github.io/posts/%EC%8B%9C%EC%8A%A4%ED%85%9C%EB%B3%B4%EC%95%88%EC%8B%A4%EB%AC%B4-%EA%B8%B0%EB%A7%90%EA%B3%A0%EC%82%AC/" rel="alternate" type="text/html" title="시스템 보안실무 기말고사" /><published>2022-12-15T20:00:00+08:00</published> <updated>2022-12-15T20:00:00+08:00</updated> <id>https://hdev1004.github.io/posts/%EC%8B%9C%EC%8A%A4%ED%85%9C%EB%B3%B4%EC%95%88%EC%8B%A4%EB%AC%B4-%EA%B8%B0%EB%A7%90%EA%B3%A0%EC%82%AC/</id> <content src="https://hdev1004.github.io/posts/%EC%8B%9C%EC%8A%A4%ED%85%9C%EB%B3%B4%EC%95%88%EC%8B%A4%EB%AC%B4-%EA%B8%B0%EB%A7%90%EA%B3%A0%EC%82%AC/" /> <author> <name>{"name"=>"Cotes Chung", "link"=>"https://github.com/cotes2020"}</name> </author> <category term="Blogging" /> <category term="Network" /> <summary> Q1 해당 취약점과 관련된 애니메이션 (.ANI) 파일의 구조를 이해하고 있는가? (DRUM.ANI 파일을 예시로 질문함) ANI 파일은 멀티미디어 파일 포맷인 RIFF 포맷을 기반으로 구성되기 때문에 “RIFF” 시그니처를 포함한 헤더로 시작한다. RIFF는 “청크(Chunk)”라 부르는 가변 길이의 구획으로 구성되어 있기 때문에 ANI 파일은 청크 자료구조를 다수 포함한다. 청크의 자료구조 멤버 사이즈 유형 tag, 청크 유형 표시 4byte seq, LIST, rate, anih size, 청크 사이즈 4byte   ... </summary> </entry> <entry><title>시스템 보안실무 중간고사</title><link href="https://hdev1004.github.io/posts/%EC%8B%9C%EC%8A%A4%ED%85%9C%EB%B3%B4%EC%95%88%EC%8B%A4%EB%AC%B4-%EC%A4%91%EA%B0%84%EA%B3%A0%EC%82%AC/" rel="alternate" type="text/html" title="시스템 보안실무 중간고사" /><published>2022-10-20T20:00:00+08:00</published> <updated>2022-10-20T20:00:00+08:00</updated> <id>https://hdev1004.github.io/posts/%EC%8B%9C%EC%8A%A4%ED%85%9C%EB%B3%B4%EC%95%88%EC%8B%A4%EB%AC%B4-%EC%A4%91%EA%B0%84%EA%B3%A0%EC%82%AC/</id> <content src="https://hdev1004.github.io/posts/%EC%8B%9C%EC%8A%A4%ED%85%9C%EB%B3%B4%EC%95%88%EC%8B%A4%EB%AC%B4-%EC%A4%91%EA%B0%84%EA%B3%A0%EC%82%AC/" /> <author> <name>{"name"=>"Cotes Chung", "link"=>"https://github.com/cotes2020"}</name> </author> <category term="Blogging" /> <category term="Network" /> <summary> 실행파일 및 코드 분석 영역 (Stud_PE, IDA) Q1. 해당 실행 파일이 매핑될 메모리상의 가상주소(Imagebase)는 무엇입니까? Stude_PE에서 ImageBase를 확인할 수 있다. 답 : 0x00400000 Q2. 해당 실행 파일이 메모리에 로드된 후 가장먼저 실행되는 코드의 주소(Address of Entrypoint)는 무엇입니까? (옵셋 값 말고 메모리 상의 가상주소 값을 적어 주세요) 답 : 0x004012A7 ImageBase (0x00400000) + Address of EntryPoint Offset(0x000012A7) Q3. 함수 “Func_A”가 호출되는 지점의 가상주소는 무엇입니까? 답 : 0x0040106C IDA에서 Main ... </summary> </entry> <entry><title>RDP서비스 활성화 및 원격 통제</title><link href="https://hdev1004.github.io/posts/RDP%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%99%9C%EC%84%B1%ED%99%94-%EB%B0%8F-%EC%9B%90%EA%B2%A9-%ED%86%B5%EC%A0%9C/" rel="alternate" type="text/html" title="RDP서비스 활성화 및 원격 통제" /><published>2022-06-18T20:00:00+08:00</published> <updated>2022-06-18T20:00:00+08:00</updated> <id>https://hdev1004.github.io/posts/RDP%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%99%9C%EC%84%B1%ED%99%94-%EB%B0%8F-%EC%9B%90%EA%B2%A9-%ED%86%B5%EC%A0%9C/</id> <content src="https://hdev1004.github.io/posts/RDP%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%99%9C%EC%84%B1%ED%99%94-%EB%B0%8F-%EC%9B%90%EA%B2%A9-%ED%86%B5%EC%A0%9C/" /> <author> <name>{"name"=>"Cotes Chung", "link"=>"https://github.com/cotes2020"}</name> </author> <category term="Blogging" /> <category term="Network" /> <summary> Step1. 환경 구성 환경 구성 환경 구성은 전과 같다. ip가 56번(내부) 대역에서 57번(외부) 대역으로 서비스에 접근할 수 있지만, 57번(외부) 대역에서 56번(내부) 대역으로는 서비스 접속이 안되게 설정한다. 56번, 57번 대역에서는 58번 대역으로 핑이 안 가도록 설정한다. Step2. 사용자 정보 검색 윈도우에서 사용자 정보 검색을 위한 명령어는 net user가 있다. rdp_enable.bat 을 보면 사용자 추가, 그룹에 추가하는 명령어가 있으니 참고하면 된다. 로컬 그룹 확인 로컬 그룹 확인은 net localgroup을 이용하여 확인할 수 있다. C:\&amp;gt; net localgroup 특정 로컬 그룹 확인 특정 로컬 그룹 확인... </summary> </entry> <entry><title>VPN과 터널링 프로토콜</title><link href="https://hdev1004.github.io/posts/VPN%EA%B3%BC-%ED%84%B0%EB%84%90%EB%A7%81-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C/" rel="alternate" type="text/html" title="VPN과 터널링 프로토콜" /><published>2022-06-17T20:00:00+08:00</published> <updated>2022-06-19T20:50:55+08:00</updated> <id>https://hdev1004.github.io/posts/VPN%EA%B3%BC-%ED%84%B0%EB%84%90%EB%A7%81-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C/</id> <content src="https://hdev1004.github.io/posts/VPN%EA%B3%BC-%ED%84%B0%EB%84%90%EB%A7%81-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C/" /> <author> <name>{"name"=>"Cotes Chung", "link"=>"https://github.com/cotes2020"}</name> </author> <category term="Blogging" /> <category term="Network" /> <summary> Step1. 환경 구성 환경 구성 환경 구성은 다음과 같다. ip가 56번(내부) 대역에서 57번(외부) 대역으로 서비스에 접근할 수 있지만, 57번(외부) 대역에서 56번(내부) 대역으로는 서비스 접속이 안되게 설정한다. 56번, 57번 대역에서는 58번 대역으로 핑이 안 가도록 설정한다. 바로 사용하지는 않고, VPN에서 사용을 할 것이다. 네트워크 카드 추가 우선 충돌이 발생하지 않도록, CentOS, pfsense를 종료하고 스냅샷을 찍어둔 후 진행한다. 위의 환경을 만들기 위해서는 네트워크 카드를 만들어야 한다. 호스트 네트워크 관리자(Ctrl + H)에 들어가도록 한다. 네트워크 카드를 만들고, 새로 생긴 Adapter #3 를 192.168.58.2 대역으... </summary> </entry> <entry><title>표적 네트워크의 다른 시스템에 대한 제어 권한 탈취와 제어</title><link href="https://hdev1004.github.io/posts/%ED%91%9C%EC%A0%81-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EC%9D%98-%EB%8B%A4%EB%A5%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A0%9C%EC%96%B4-%EA%B6%8C%ED%95%9C-%ED%83%88%EC%B7%A8%EC%99%80-%EC%A0%9C%EC%96%B4/" rel="alternate" type="text/html" title="표적 네트워크의 다른 시스템에 대한 제어 권한 탈취와 제어" /><published>2022-06-16T20:00:00+08:00</published> <updated>2022-06-16T20:00:00+08:00</updated> <id>https://hdev1004.github.io/posts/%ED%91%9C%EC%A0%81-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EC%9D%98-%EB%8B%A4%EB%A5%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A0%9C%EC%96%B4-%EA%B6%8C%ED%95%9C-%ED%83%88%EC%B7%A8%EC%99%80-%EC%A0%9C%EC%96%B4/</id> <content src="https://hdev1004.github.io/posts/%ED%91%9C%EC%A0%81-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EC%9D%98-%EB%8B%A4%EB%A5%B8-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A0%9C%EC%96%B4-%EA%B6%8C%ED%95%9C-%ED%83%88%EC%B7%A8%EC%99%80-%EC%A0%9C%EC%96%B4/" /> <author> <name>{"name"=>"Cotes Chung", "link"=>"https://github.com/cotes2020"}</name> </author> <category term="Blogging" /> <category term="Network" /> <summary> Step1. 환경 구성 환경 구성 환경 구성은 다음과 같다. ip가 56번(내부) 대역에서 57번(외부) 대역으로 서비스에 접근할 수 있지만, 57번(외부) 대역에서 56번(내부) 대역으로는 서비스 접속이 안되게 설정한다. 시나리오를 구성하자면, ARPING을 통해 Window #2를 찾아낸 후 공격을 실행하는 시나리오다. Step2. 세션 획득 handler를 사용하여 Windows #1의 세션을 얻은 후 진행한다. 칼리에서 진행한다. C:\WINDOWS\Temp&amp;gt; plink -R 8888:192.168.56.20:445 -l root -pw lab 192.168.57.10 칼리에서 아래의 스크립트가 있다면 스크립트 구성은 넘어가도 된다. m... </summary> </entry> </feed>
